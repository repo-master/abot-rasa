version: '3.1'

intents:
- query_metric_aggregate
# - summarize_sensor_data:
#     use_entities:
#     - metric_type
- sensor_generate_report
- sensor_report_download
- sensor_status
- query_sensor_list
- query_location_list
- query_value_of_data_timerange
- query_value_of_data_location
- activate_sensor_name_form

entities:
- metric_type
- location
- sensor_name_input
- download_format


slots:
  metric:
    type: text
    mappings:
    - type: from_entity
      entity: metric_type
      intent:
      - query_metric_aggregate
    - type: from_text
      conditions:
      - active_loop: form_sensor_type_location
        requested_slot: metric
  location:
    type: text
    mappings:
    - type: from_entity
      entity: location
      intent:
      - query_metric_aggregate
    - type: from_text
      conditions:
      - active_loop: form_sensor_type_location
        requested_slot: location

  sensor_name:
    type: text
    mappings:
    - type: from_text
      conditions:
      - active_loop: form_sensor_name
        requested_slot: sensor_name
    - type: from_entity
      entity: sensor_name_input
      intent: activate_sensor_name_form
  load_aggregation_interval:
    type: any
    mappings:
    - type: from_entity
      entity: duration
      intent:
      - query_metric_aggregate
  need_select_sensor:
    type: bool
    initial_value: false
    mappings:
    - type: custom
  report_download_format:
    type: text
    initial_value: pdf
    mappings:
    - type: from_entity
      entity: download_format
      intent: sensor_report_download
  sensor_load_params:
    type: any
    mappings:
    - type: custom

  # Timestamp range for grabbing data. ISO8601 strings of entered time,
  # a dict of {'body': '...', 'from': '...', 'to': '...'} for range.
  # If it fails, you get a list (all entity values)
  data_time_range:
    type: any
    mappings:
    - type: from_entity
      entity: time

  # When true, if asked to change any aggregation, it will load data again.
  # If false, will prompt
  data_auto_load_on_aggregation:
    type: bool
    initial_value: true
    mappings:
    - type: custom

  flag_should_ask_sensor_name:
    type: bool
    initial_value: true
    mappings:
    - type: custom
  flag_should_ask_sensor_location:
    type: bool
    initial_value: true
    mappings:
    - type: custom

forms:
  form_sensor_name:
    required_slots:
    - sensor_name
  form_sensor_type_location:
    required_slots:
    - metric
    - location
    - data_time_range

actions:
- action_sensor_data_load
- action_metric_summarize
- action_fetch_report
- action_show_sensor_list
- action_show_location_list
- action_ask_data_value_timerange
- action_ask_data_value_location
- action_query_sensor_status
- action_download_report
- validate_form_sensor_name
- validate_form_sensor_type_location
- action_ask_sensor_name
- action_ask_metric
- action_ask_location
- action_ask_data_time_range
- action_setup_load_slots

responses:
  utter_ask_data_time_range:
  - text: Please Specify time period
  utter_ask_aggregation:
  - text: What type of aggregation type should be done?
  utter_ask_query:
  - text: What would you like to know about the sensor?
    buttons:
    - title: Status
      payload: /sensor_status
    - title: Average
      payload: average
    - title: Median
      payload: median
    - title: Min
      payload: minimum
    - title: Max
      payload: maximum
    - title: Report
      payload: /sensor_generate_report
